---
import { getCollection } from "astro:content";
const areas = await getCollection("areas");
---
<ul class="text-7xl text-[#f74843] font-extrabold [&>li]:mt-4">
  {areas.map((area, index) => {
    const { slug, data } = area;
    const { title, h2, description, works } = data;

    return (
      <li>
        <button
          id={`toggle-button-${index}`}
          class="mx-[18vw] w-full hover:text-white text-left cursor-pointer group transition-colors duration-300">
          {title}
        </button>
        <div
          class="content-wrapper max-h-0 overflow-hidden transition-[max-height,opacity] duration-500 ease-in-out mt-4 bg-white text-gray-600"
          id={`content-${index}`}
          data-visible="false"
        >
          <div class="px-[18vw] py-28 text-xl">
            <h2>{h2}</h2>
            <p class="font-thin py-6">{description}</p>
            <ul class="flex gap-40 text-black">
              {works.map((work) => (
                <li>{work}</li>
              ))}
            </ul>
          </div>
        </div>

      </li>
    );
  })}
</ul>

<script>
  document.querySelectorAll("button[id^='toggle-button-']").forEach((button) => {
    button.addEventListener("click", () => {
      const index = button.id.split("-").pop(); 
      const content = document.getElementById(`content-${index}`);

      if (!content) {
        console.warn(`No content found for index ${index}`);
        return;
      }

      const isVisible = content.getAttribute("data-visible") === "true";

      if (isVisible) {
        content.style.maxHeight = "0";
        content.setAttribute("data-visible", "false");
      } else {
        content.style.maxHeight = content.scrollHeight + "px"; 
        content.setAttribute("data-visible", "true");
      }
    });
  });
</script>
